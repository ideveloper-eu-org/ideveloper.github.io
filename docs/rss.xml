<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Personal Blog</title><link>https://ideveloper-eu-org.github.io/ideveloper.github.io</link><description>Some notes</description><copyright>Personal Blog</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://github.githubassets.com/favicons/favicon.svg</url><title>avatar</title><link>https://ideveloper-eu-org.github.io/ideveloper.github.io</link></image><lastBuildDate>Tue, 19 Nov 2024 08:05:51 +0000</lastBuildDate><managingEditor>Personal Blog</managingEditor><ttl>60</ttl><webMaster>Personal Blog</webMaster><item><title>Docker Proxies</title><link>https://ideveloper-eu-org.github.io/ideveloper.github.io/post/Docker%20Proxies.html</link><description># Docker Proxy settings&#13;
&#13;
For some reason, there are always network issues when accessing docker hub.&#13;
&#13;
There are three levels that need to be set, which we explain one by one blow&#13;
&#13;
## For docker pull&#13;
&#13;
The network environment here is set up by dockerd, so we need to set dockerd proxy paramters&#13;
&#13;
This is general set:&#13;
&#13;
```&#13;
sudo mkdir -p /etc/systemd/system/docker.service.d&#13;
sudo touch /etc/systemd/system/docker.service.d/proxy.conf&#13;
```&#13;
&#13;
proxy.conf&#13;
```&#13;
[Service]&#13;
Environment='HTTP_PROXY=http://proxy.example.com:8080/'&#13;
Environment='HTTPS_PROXY=http://proxy.example.com:8080/'&#13;
Environment='NO_PROXY=localhost,127.0.0.1,.example.com'&#13;
```&#13;
&#13;
This is snap version:&#13;
&#13;
/etc/systemd/system/snap.docker.dockerd.service&#13;
```&#13;
...&#13;
[Service]&#13;
Environment='HTTP_PROXY=http://127.0.0.1:10086'&#13;
Environment='HTTPS_PROXY=http://127.0.0.1:10086'&#13;
Environment='NO_PROXY=localhost,127.0.0.1'&#13;
...&#13;
```&#13;
&#13;
/etc/environment&#13;
```&#13;
HTTP_PROXY=http://127.0.0.1:10086&#13;
HTTPS_PROXY=http://127.0.0.1:10086&#13;
NO_PROXY=localhost,127.0.0.1&#13;
```&#13;
&#13;
Run the following command to make the parameters take effect&#13;
```&#13;
sudo systemctl daemon-reload&#13;
// general&#13;
sudo systemctl restart docker&#13;
// snap&#13;
sudo snap restart docker&#13;
```&#13;
&#13;
Run the following command to check&#13;
```&#13;
sudo systemctl show --property=Environment snap.docker.dockerd.service&#13;
```&#13;
&#13;
BWT: You can also configure dockerd's proxy by configuring daemon.json&#13;
&#13;
## For docker build&#13;
&#13;
Since the agents of build and docker pull are isolated from each other, we need to specify the agent when we build the image, which can only be specified in the command at present&#13;
&#13;
```&#13;
&#13;
docker build --network host --build-arg 'HTTP_PROXY=http://127.0.0.1:10086/' \&#13;
    --build-arg 'HTTPS_PROXY=http://127.0.0.1:10086/' \&#13;
    --build-arg 'NO_PROXY=localhost,127.0.0.1' -t agent -f ./docker/Dockerfile .&#13;
&#13;
```&#13;
&#13;
The host network is used here to ensure that 127.0.0.1 points to the local machine&#13;
&#13;
&#13;
## For docker run / container&#13;
&#13;
~/.docker/config.json&#13;
···&#13;
&#13;
{&#13;
 'proxies': {&#13;
   'default': {&#13;
     'httpProxy': 'http://127.0.0.1:10086',&#13;
     'httpsProxy': 'http://127.0.0.1:10086',&#13;
     'noProxy': 'localhost,127.0.0.1'&#13;
   }&#13;
 }&#13;
}&#13;
&#13;
···&#13;
&#13;
TODO:。</description><guid isPermaLink="true">https://ideveloper-eu-org.github.io/ideveloper.github.io/post/Docker%20Proxies.html</guid><pubDate>Thu, 14 Nov 2024 18:02:00 +0000</pubDate></item><item><title>Some VPN note</title><link>https://ideveloper-eu-org.github.io/ideveloper.github.io/post/Some%20VPN%20note.html</link><description>## The vfly-core config is different with v2rayU config(xray-core)&#13;
&#13;
- Ensure that the system time is consistent with that of the server&#13;
- routing don't include the settings field&#13;
- inbounds listen use 0.0.0.0 replace with 127.0.0.1&#13;
&#13;
## Template for vfly-core&#13;
&#13;
```json&#13;
{&#13;
  'inbounds': [&#13;
    {&#13;
      'listen': '0.0.0.0',&#13;
      'protocol': 'socks',&#13;
      'settings': {&#13;
        'udp': false,&#13;
        'auth': 'noauth'&#13;
      },&#13;
      'port': '10087'&#13;
    },&#13;
    {&#13;
      'listen': '0.0.0.0',&#13;
      'protocol': 'http',&#13;
      'settings': {&#13;
        'timeout': 360&#13;
      },&#13;
      'port': '10086'&#13;
    }&#13;
  ],&#13;
  'outbounds': [&#13;
    {&#13;
      'protocol': 'vmess',&#13;
      'streamSettings': {&#13;
        'network': 'ws',&#13;
        'wsSettings': {&#13;
          'path': '/v2ray',&#13;
          'headers': {&#13;
            'host': ''&#13;
          }&#13;
        },&#13;
        'security': 'none'&#13;
      },&#13;
      'tag': 'proxy',&#13;
      'settings': {&#13;
        'vnext': [&#13;
          {&#13;
            'address': '...',&#13;
            'users': [&#13;
              {&#13;
                'id': '...',&#13;
                'alterId': 2,&#13;
                'level': 0,&#13;
                'security': 'auto'&#13;
              }&#13;
            ],&#13;
            'port': 123&#13;
          }&#13;
        ]&#13;
      }&#13;
    },&#13;
    {&#13;
      'tag': 'direct',&#13;
      'protocol': 'freedom',&#13;
      'settings': {&#13;
        'domainStrategy': 'UseIP',&#13;
        'userLevel': 0&#13;
      }&#13;
    }&#13;
  ],&#13;
  'routing': {&#13;
      'domainStrategy': 'IPOnDemand',&#13;
      'rules': [&#13;
        {&#13;
          'type': 'field',&#13;
          'outboundTag': 'direct',&#13;
          'domain': [&#13;
            'geosite:cn',&#13;
            'localhost'&#13;
          ]&#13;
        },&#13;
        {&#13;
          'type': 'field',&#13;
          'ip': [&#13;
            'geoip:cn',&#13;
            'geoip:private'&#13;
          ],&#13;
          'outboundTag': 'direct'&#13;
        }&#13;
      ]&#13;
    }&#13;
}&#13;
&#13;
```&#13;
&#13;
## Ubuntu System Date&#13;
&#13;
```&#13;
// modify the systemdate&#13;
sudo date -s '2024-11-19 15:42'&#13;
&#13;
// save it to boot, ensure that is correct after reboot&#13;
sudo hwclock -w&#13;
```。</description><guid isPermaLink="true">https://ideveloper-eu-org.github.io/ideveloper.github.io/post/Some%20VPN%20note.html</guid><pubDate>Tue, 29 Oct 2024 07:09:00 +0000</pubDate></item><item><title>Ubuntu 24 install drivers</title><link>https://ideveloper-eu-org.github.io/ideveloper.github.io/post/Ubuntu%2024%20install%20drivers.html</link><description>If you want install nvidia drivers&#13;
&#13;
```&#13;
sudo ubuntu-drivers autoinstall&#13;
&#13;
```。</description><guid isPermaLink="true">https://ideveloper-eu-org.github.io/ideveloper.github.io/post/Ubuntu%2024%20install%20drivers.html</guid><pubDate>Mon, 12 Aug 2024 17:36:09 +0000</pubDate></item><item><title>Some notes about publishing monorepos  with release-it</title><link>https://ideveloper-eu-org.github.io/ideveloper.github.io/post/Some%20notes%20about%20publishing%20monorepos%20%20with%20release-it.html</link><description>## Release-it&#13;
&gt; this is release tools for front-end&#13;
&#13;
&#13;
For publish monorepos we need above plugins:&#13;
&#13;
@release-it-plugins/workspaces&#13;
@release-it/conventional-changelog&#13;
&#13;
The configuration is as follows：&#13;
&#13;
```js&#13;
{&#13;
  'git': {&#13;
    'commitMessage': 'chore: release ${version}' // This is to match commitlint&#13;
  },&#13;
  'npm': false, // Here is important&#13;
  'plugins': {&#13;
    '@release-it-plugins/workspaces': true,&#13;
    '@release-it/conventional-changelog': {&#13;
      'preset': {&#13;
        'name': 'conventionalcommits',&#13;
        'type': [&#13;
          {&#13;
            'type': 'feat',&#13;
            'section': 'Features'&#13;
          },&#13;
          {&#13;
            'type': 'fix',&#13;
            'section': 'Bug Fixes'&#13;
          }&#13;
        ]&#13;
      },&#13;
      'infile': 'CHANGELOG.md'&#13;
    }&#13;
  }&#13;
}&#13;
&#13;
```&#13;
To publish we just run command `pnpm release` in root folder&#13;
。</description><guid isPermaLink="true">https://ideveloper-eu-org.github.io/ideveloper.github.io/post/Some%20notes%20about%20publishing%20monorepos%20%20with%20release-it.html</guid><pubDate>Thu, 20 Jun 2024 07:44:32 +0000</pubDate></item><item><title>My Personal blog</title><link>https://ideveloper-eu-org.github.io/ideveloper.github.io/post/My%20Personal%20blog.html</link><description>#  Personal blog opened&#13;
&#13;
Prepare to take some development notes。</description><guid isPermaLink="true">https://ideveloper-eu-org.github.io/ideveloper.github.io/post/My%20Personal%20blog.html</guid><pubDate>Thu, 20 Jun 2024 02:38:34 +0000</pubDate></item></channel></rss>